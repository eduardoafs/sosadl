// ok

library testFunction4 is {
  
  datatype type1 is tuple{x:integer{0..10}, y:integer{0..10}} {
  	function (left : type1)::addx(right : type1) : integer{0..20} is {
  	  return left::x+right::x
  	}
  	function (left : type1)::addy(right : type1) : integer{0..20} is {
  	  return left::y+right::y
  	}
  }
  
  function (left : type1)::multx(right : type1) : integer{0..100} is {
  	return left::x*right::x
  }
  
  function (left : type1)::multy(right : type1) : integer{0..100} is {
  	return left::y*right::y
  }
  
  system test() is {
    
    datatype type1 is tuple{x:integer{0..10}, y:integer{0..10}} {
  	  function (left : type1)::addx(right : type1) : integer{0..20} is {
  	    return left::x+right::x
  	  }
  	  function (left : type1)::addy(right : type1) : integer{0..20} is {
  	    return left::y+right::y
  	  }
    }
  
    
    gate gate1 is {
      connection connection1 is out{type1}
    } guarantee {
      protocol gate1protocol is {
        done
      }
    }
    
    behavior test is {
      done
    }
  }
}